name: Publish to MCP Registry

on:
  push:
    tags:
      - "v*"  # Triggers on version tags like v0.1.0

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update version in pyproject.toml
        run: |
          sed -i 's/version = ".*"/version = "${{ steps.version.outputs.VERSION }}"/' pyproject.toml

      - name: Update version in server.json (both occurrences)
        run: |
          python3 << 'EOF'
          import json
          with open('server.json', 'r') as f:
              data = json.load(f)
          data['version'] = "${{ steps.version.outputs.VERSION }}"
          if 'packages' in data:
              for pkg in data['packages']:
                  pkg['version'] = "${{ steps.version.outputs.VERSION }}"
          with open('server.json', 'w') as f:
              json.dump(data, f, indent=2)
          EOF

      - name: Run tests
        run: |
          uv run test_connection.py || echo "Connection tests require Redis"

      - name: Build package
        run: |
          uv build

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv publish

      - name: Install MCP Publisher
        run: |
          # Get the latest release tag and version
          LATEST_TAG=$(curl -s https://api.github.com/repos/modelcontextprotocol/registry/releases/latest | grep "tag_name" | cut -d '"' -f 4)
          VERSION=${LATEST_TAG#v}  # Remove 'v' prefix
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/')
          
          # Download and extract (filename uses version without 'v')
          curl -L "https://github.com/modelcontextprotocol/registry/releases/download/${LATEST_TAG}/mcp-publisher_${VERSION}_${OS}_${ARCH}.tar.gz" | tar xz
          chmod +x mcp-publisher

      - name: Login to MCP Registry
        run: ./mcp-publisher login github-oidc

      - name: Publish to MCP Registry
        run: ./mcp-publisher publish
